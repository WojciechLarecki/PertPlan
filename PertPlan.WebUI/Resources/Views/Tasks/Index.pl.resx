<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add row" xml:space="preserve">
    <value>Dodaj wiersz</value>
  </data>
  <data name="Average" xml:space="preserve">
    <value>Najpewniejszy</value>
  </data>
  <data name="Average finish time can not be longer than negative." xml:space="preserve">
    <value>Najpewniejszy czas wykonania zadania nie może być dłuższy lub równy negatywnemu.</value>
  </data>
  <data name="Average finish time can not be shorter than positive." xml:space="preserve">
    <value>Najpewniejszy czas wykonania zadania nie może być krótszy lub równy pozytywnemu.</value>
  </data>
  <data name="averageTimeIndex" xml:space="preserve">
    <value>T&lt;sub&gt;m&lt;/sub&gt;</value>
  </data>
  <data name="averate time to finish task" xml:space="preserve">
    <value>najpewniejszy czas ukończenia zadania</value>
  </data>
  <data name="Create diagram" xml:space="preserve">
    <value>Stwórz diagram</value>
  </data>
  <data name="Delete last row" xml:space="preserve">
    <value>Usuń ostatni wiersz</value>
  </data>
  <data name="Delete selected row" xml:space="preserve">
    <value>Usuń zaznaczony wiersz</value>
  </data>
  <data name="Field contains incorrect data." xml:space="preserve">
    <value>Ciąg zadań ma niepoprawą strukturę.</value>
  </data>
  <data name="Finish time" xml:space="preserve">
    <value>Czas ukończenia</value>
  </data>
  <data name="finishTimeIndex" xml:space="preserve">
    <value>T&lt;sub&gt;f&lt;/sub&gt;</value>
  </data>
  <data name="Insert row" xml:space="preserve">
    <value>Wstaw wiersz</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nazwa</value>
  </data>
  <data name="nameIndex" xml:space="preserve">
    <value>N&lt;sub&gt;az&lt;/sub&gt;</value>
  </data>
  <data name="Negative" xml:space="preserve">
    <value>Pesymistyczny</value>
  </data>
  <data name="Negative finish time can not be shorter than average." xml:space="preserve">
    <value>Pesymistyczny czas wykonania zadania nie może być krótszy lub równy średniemu.</value>
  </data>
  <data name="negative time to finish task" xml:space="preserve">
    <value>pesymistyczny czas ukończenia zadania</value>
  </data>
  <data name="negativeTimeIndex" xml:space="preserve">
    <value>T&lt;sub&gt;p&lt;/sub&gt;</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Numer</value>
  </data>
  <data name="numberIndex" xml:space="preserve">
    <value>N&lt;sub&gt;um&lt;/sub&gt;</value>
  </data>
  <data name="Numbers of previous tasks." xml:space="preserve">
    <value>Liczba poprzednich zadań</value>
  </data>
  <data name="Positive" xml:space="preserve">
    <value>Optymistyczny</value>
  </data>
  <data name="positive time to finish task" xml:space="preserve">
    <value>optymistyczny czas ukończenia zadania</value>
  </data>
  <data name="positiveTimeIndex" xml:space="preserve">
    <value>T&lt;sub&gt;o&lt;/sub&gt;</value>
  </data>
  <data name="Previous tasks" xml:space="preserve">
    <value>Poprzednie zadania</value>
  </data>
  <data name="previous tasks small" xml:space="preserve">
    <value>poprzednie zadania</value>
  </data>
  <data name="previousTasksIndex" xml:space="preserve">
    <value>P&lt;sub&gt;zad&lt;/sub&gt;</value>
  </data>
  <data name="Proceeding tasks field cannot be empty." xml:space="preserve">
    <value>Pole poprzednich zadań nie może być puste.</value>
  </data>
  <data name="Task can not depend on itself." xml:space="preserve">
    <value>Zadanie nie może polegać na samym sobie.</value>
  </data>
  <data name="Task can not depend on undefined task." xml:space="preserve">
    <value>Zadanie nie może polegać na jeszcze niezdefiniowanym zadaniu.</value>
  </data>
  <data name="Task can not have negative number." xml:space="preserve">
    <value>Zadania nie mają ujemnych numerów.</value>
  </data>
  <data name="Task name can not contain only spaces." xml:space="preserve">
    <value>Nazwa zadania nie może zawierac samych spacji.</value>
  </data>
  <data name="task's name" xml:space="preserve">
    <value>nazwa zadania</value>
  </data>
  <data name="task's number" xml:space="preserve">
    <value>numer zadania</value>
  </data>
  <data name="time to finish task" xml:space="preserve">
    <value>czas do ukończenia zadania</value>
  </data>
</root>