@model PertPlan.WebUI.Models.ViewModels.TaskPostVM
@using PertPlan.WebUI.Models.ViewModels;
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@section Styles {
    <link rel="stylesheet" href="~/css/Actions.css" />
}
<div class="options mb-3">
    <div class="card" style="width: 24rem;">
        <div class="card-header">@Localizer["Additional options"]</div>
        <div class="card-body">
            <div class="menu align-items-center">
                <button class="btn btn-primary" id="exportToCSV" type="button">@Localizer["Export to CSV"]</button>
                <button class="btn btn-primary" id="exportToSVG" type="button">@Localizer["Export to SVG"]</button>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" checked="checked" id="showCriticalPath">
                    <label class="form-check-label" for="showCriticalPath">@Localizer["Display critical path"]</label>
                </div>
            </div>
        </div>
    </div>

    <div class="card" style="width: 24rem;">
        <div class="card-header">@Localizer["Chance for project success"]</div>
        <div class="card-body">
            <div class="menu">
                <input id="projectDuration" type="number" class="form-control" required step="0.5" min="0.5" max="999" placeholder="@Localizer["Duration of project"]">
                <div id="projectSuccessStatus" class="noData">@Localizer["No data"]</div>
            </div>
        </div>
    </div>
</div>

<div class="tableContainer">
    <table id="table1" class="table table-bordered table-hover table-responsive table-sm">
        <thead>
            <tr>
                @foreach (var item in Model.TableVM.Nodes)
                {
                    if (item.Name == null) continue;

                    <th>@item.Name</th>
                }
                <th>@Localizer["Time"]</th>
                <th>@Localizer["Probability"]</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var row in Model.TableVM.Rows)
            {
                <tr>
                    @foreach (var number in row.Sequence!)
                    {
                        var symbol = number == 1 ? Localizer["O"] : number == 2 ? Localizer["Avg"] : Localizer["N"];
                        if (number == 0) continue;
                        <td>@symbol</td>
                    }
                    <td>@row.Time</td>
                    <td>@row.Probability.ToString("F6")</td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="tableContainer">
    <table id="table2" class="table table-bordered table-hover table-responsive table-sm">
        <thead>
            <tr>
                <th>@Localizer["Time"]</th>
                <th>@Localizer["Probability"]</th>
                <th>@Localizer["Product"]</th>
            </tr>
        </thead>
        <tbody>
            @{ var sum = 0d; var contolSum = 0d; }
            @foreach (var row in Model.TableVM.RowsForTable2)
            {
                <tr>
                    <td>@row.Key</td>
                    <td>@row.Value.ToString("F6")</td>
                    @{
                        var product = row.Key * row.Value;
                        contolSum += row.Value;
                        sum += product;
                    }
                    <td>@product.ToString("F6")</td>
                </tr>
            }
        </tbody>
        <tfoot>
            @{
                sum = Math.Round(sum, 6);
                sum = Math.Ceiling(sum);
            }
            <tr>
                <td colspan="3">@Localizer["Expected time of project realisation"]: @sum</td>
            </tr>
            <tr class="d-none">
                <td colspan="3">@Localizer["Control sum"]: @contolSum</td>
            </tr>
        </tfoot>
    </table>
</div>

<div class="mermaid text-center mb-4" id="table3">
    @Model.TableVM.ToBarChart();
</div>



<div class="mermaid text-center">
    @Html.Raw(Model.ToString())
</div>


@section Scripts {
    <script src="~/lib/mermaidjs/mermaid.min.js"></script>
    <script type="module" src="~/js/Actions.js"></script>
    <script type="text/javascript">
        const csvContent = @Json.Serialize(Model.CSV);
        const criticalPathLength = @Json.Serialize(Model.CriticalPathLenght);
        const projectStandardDeviation = @Json.Serialize(Model.ProjectStandardDeviation);
        const localizer = {
            noData: @Json.Serialize(Localizer["No data"].Value),
            veryLikely: @Json.Serialize(Localizer["Very likely"].Value),
            likely: @Json.Serialize(Localizer["Likely"].Value),
            unlikely: @Json.Serialize(Localizer["Unlikely"].Value),
            veryUnlikey: @Json.Serialize(Localizer["Very unlikely"].Value),
            graph: @Json.Serialize(Localizer["graph"].Value),
            tasks: @Json.Serialize(Localizer["tasks"].Value),
        }
    </script>
}
